"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7996],{1916:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var t=s(4848),a=s(8453);const o={title:"Table"},r=void 0,i={id:"table",title:"Table",description:"ux.table",source:"@site/../docs/table.md",sourceDirName:".",slug:"/table",permalink:"/docs/table",draft:!1,unlisted:!1,editUrl:"https://github.com/oclif/oclif.github.io/tree/docs/docs/../docs/table.md",tags:[],version:"current",lastUpdatedBy:"Mike Donnalley",lastUpdatedAt:1711648030,formattedLastUpdatedAt:"Mar 28, 2024",frontMatter:{title:"Table"},sidebar:"docs",previous:{title:"Spinner",permalink:"/docs/spinner"},next:{title:"Notifications",permalink:"/docs/notifications"}},l={},c=[{value:"<code>ux.table</code>",id:"uxtable",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"uxtable",children:(0,t.jsx)(n.code,{children:"ux.table"})}),"\n",(0,t.jsx)(n.p,{children:"Displays tabular data"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"ux.table(data, columns, options)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Where:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"}),": array of data objects to display"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"columns"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/oclif/core/blob/main/src/cli-ux/styled/table.ts",children:"Table.Columns"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/oclif/core/blob/main/src/cli-ux/styled/table.ts",children:"Table.Options"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ux.table.flags()"})," returns an object containing all the table flags to include in your command."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"{\n  columns: Flags.string({exclusive: ['additional'], description: 'only show provided columns (comma-seperated)'}),\n  sort: Flags.string({description: 'property to sort by (prepend '-' for descending)'}),\n  filter: Flags.string({description: 'filter property by partial string matching, ex: name=foo'}),\n  csv: Flags.boolean({exclusive: ['no-truncate'], description: 'output is csv format'}),\n  extended: Flags.boolean({char: 'x', description: 'show extra columns'}),\n  'no-truncate': Flags.boolean({exclusive: ['csv'], description: 'do not truncate output to fit screen'}),\n  'no-header': Flags.boolean({exclusive: ['csv'], description: 'hide table header from output'}),\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Passing ",(0,t.jsx)(n.code,{children:"{only: ['columns']}"})," or ",(0,t.jsx)(n.code,{children:"{except: ['columns']}"})," as an argument into ",(0,t.jsx)(n.code,{children:"cli.table.flags()"})," will allow/block those flags from the returned object."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ux.Table.Columns"})," defines the table columns and their display options."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const columns: ux.Table.Columns = {\n  // where `.name` is a property of a data object\n  name: {}, // \"Name\" inferred as the column header\n  id: {\n    header: 'ID', // override column header\n    minWidth: '10', // column must display at this width or greater\n    extended: true, // only display this column when the --extended flag is present\n    get: row => `US-O1-${row.id}`, // custom getter for data row object\n  },\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ux.Table.Options"})," defines the table options, most of which are the parsed flags from the user for display customization, all of which are optional."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const options: ux.Table.Options = {\n  printLine: myLogger, // custom logger\n  columns: flags.columns,\n  sort: flags.sort,\n  filter: flags.filter,\n  csv: flags.csv,\n  extended: flags.extended,\n  'no-truncate': flags['no-truncate'],\n  'no-header': flags['no-header'],\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Example class:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import {Command, ux} from '@oclif/core'\nimport axios from 'axios'\n\nexport default class Users extends Command {\n  static flags = {\n    ...ux.table.flags()\n  }\n\n  async run() {\n    const {flags} = await this.parse(Users)\n    const {data: users} = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n    ux.table(users, {\n      name: {\n        minWidth: 7,\n      },\n      company: {\n        get: row => row.company && row.company.name\n      },\n      id: {\n        header: 'ID',\n        extended: true\n      }\n    }, {\n      printLine: this.log.bind(this),\n      ...flags, // parsed flags\n    })\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Displays:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:'$ example-cli users\nName                     Company\nLeanne Graham            Romaguera-Crona\nErvin Howell             Deckow-Crist\nClementine Bauch         Romaguera-Jacobson\nPatricia Lebsack         Robel-Corkery\nChelsey Dietrich         Keebler LLC\nMrs. Dennis Schulist     Considine-Lockman\nKurtis Weissnat          Johns Group\nNicholas Runolfsdottir V Abernathy Group\nGlenna Reichert          Yost and Sons\nClementina DuBuque       Hoeger LLC\n\n$ example-cli users --extended\nName                     Company            ID\nLeanne Graham            Romaguera-Crona    1\nErvin Howell             Deckow-Crist       2\nClementine Bauch         Romaguera-Jacobson 3\nPatricia Lebsack         Robel-Corkery      4\nChelsey Dietrich         Keebler LLC        5\nMrs. Dennis Schulist     Considine-Lockman  6\nKurtis Weissnat          Johns Group        7\nNicholas Runolfsdottir V Abernathy Group    8\nGlenna Reichert          Yost and Sons      9\nClementina DuBuque       Hoeger LLC         10\n\n$ example-cli users --columns=name\nName\nLeanne Graham\nErvin Howell\nClementine Bauch\nPatricia Lebsack\nChelsey Dietrich\nMrs. Dennis Schulist\nKurtis Weissnat\nNicholas Runolfsdottir V\nGlenna Reichert\nClementina DuBuque\n\n$ example-cli users --filter="company=Group"\nName                     Company\nKurtis Weissnat          Johns Group\nNicholas Runolfsdottir V Abernathy Group\n\n$ example-cli users --sort=company\nName                     Company\nNicholas Runolfsdottir V Abernathy Group\nMrs. Dennis Schulist     Considine-Lockman\nErvin Howell             Deckow-Crist\nClementina DuBuque       Hoeger LLC\nKurtis Weissnat          Johns Group\nChelsey Dietrich         Keebler LLC\nPatricia Lebsack         Robel-Corkery\nLeanne Graham            Romaguera-Crona\nClementine Bauch         Romaguera-Jacobson\nGlenna Reichert          Yost and Sons\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>i});var t=s(6540);const a={},o=t.createContext(a);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);