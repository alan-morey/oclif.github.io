"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8664],{2678:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var t=o(4848),r=o(8453);const c={title:"Generator Commands"},a=void 0,i={id:"generator_commands",title:"Generator Commands",description:"- oclif generate NAME",source:"@site/../docs/generator_commands.md",sourceDirName:".",slug:"/generator_commands",permalink:"/docs/generator_commands",draft:!1,unlisted:!1,editUrl:"https://github.com/oclif/oclif.github.io/tree/docs/docs/../docs/generator_commands.md",tags:[],version:"current",lastUpdatedBy:"Mike Donnalley",lastUpdatedAt:1710860746,formattedLastUpdatedAt:"Mar 19, 2024",frontMatter:{title:"Generator Commands"},sidebar:"docs",previous:{title:"FAQs",permalink:"/docs/faqs"},next:{title:"Command Execution",permalink:"/docs/command_execution"}},d={},l=[{value:"<code>oclif generate NAME</code>",id:"oclif-generate-name",level:2},{value:"<code>oclif generate command NAME</code>",id:"oclif-generate-command-name",level:2},{value:"<code>oclif generate hook NAME</code>",id:"oclif-generate-hook-name",level:2}];function s(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#oclif-generate-name",children:(0,t.jsx)(n.code,{children:"oclif generate NAME"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#oclif-generate-command-name",children:(0,t.jsx)(n.code,{children:"oclif generate command NAME"})})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#oclif-generate-hook-name",children:(0,t.jsx)(n.code,{children:"oclif generate hook NAME"})})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"oclif-generate-name",children:(0,t.jsx)(n.code,{children:"oclif generate NAME"})}),"\n",(0,t.jsx)(n.p,{children:"generate a new CLI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"USAGE\n  $ oclif generate [NAME]\n\nARGUMENTS\n  NAME  directory name of new project\n\nDESCRIPTION\n  generate a new CLI\n\n  This will clone the template repo 'oclif/hello-world' and update package properties\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["See code: ",(0,t.jsx)(n.a,{href:"https://github.com/oclif/oclif/blob/v2.2.0/src/commands/generate.ts",children:"src/commands/generate.ts"})]})}),"\n",(0,t.jsx)(n.h2,{id:"oclif-generate-command-name",children:(0,t.jsx)(n.code,{children:"oclif generate command NAME"})}),"\n",(0,t.jsx)(n.p,{children:"add a command to an existing CLI or plugin"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"USAGE\n  $ oclif generate command [NAME] [--force]\n\nARGUMENTS\n  NAME  name of command\n\nFLAGS\n  --force  overwrite existing files\n\nDESCRIPTION\n  add a command to an existing CLI or plugin\n"})}),"\n",(0,t.jsx)(n.h2,{id:"oclif-generate-hook-name",children:(0,t.jsx)(n.code,{children:"oclif generate hook NAME"})}),"\n",(0,t.jsx)(n.p,{children:"add a hook to an existing CLI or plugin"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"USAGE\n  $ oclif generate hook [NAME] [--force] [--event <value>]\n\nARGUMENTS\n  NAME  name of hook (snake_case)\n\nFLAGS\n  --event=<value>  [default: init] event to run hook on\n  --force          overwrite existing files\n\nDESCRIPTION\n  add a hook to an existing CLI or plugin\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var t=o(6540);const r={},c=t.createContext(r);function a(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);